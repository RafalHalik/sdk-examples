/dts-v1/;

/ {
	#address-cells = < 0x1 >;
	#size-cells = < 0x1 >;
	model = "Native Sim Board";
	compatible = "zephyr,posix";
	chosen {
		zephyr,console = &uart0;
		zephyr,shell-uart = &uart0;
		zephyr,uart-mcumgr = &uart0;
		zephyr,flash = &flash0;
		zephyr,entropy = &rng;
		zephyr,flash-controller = &flashcontroller0;
		zephyr,display = &sdl_dc;
		zephyr,canbus = &can_loopback0;
		zephyr,code-partition = &slot0_partition;
	};
	aliases {
		eeprom-0 = &eeprom0;
		i2c-0 = &i2c0;
		spi-0 = &spi0;
		led0 = &led0;
		rtc = &rtc;
		sw0 = &button0;
	};
	leds {
		compatible = "gpio-leds";
		led0: led_0 {
			gpios = < &gpio0 0x0 0x0 >;
			label = "Green LED";
		};
	};
	lvgl_pointer {
		compatible = "zephyr,lvgl-pointer-input";
		input = < &input_sdl_touch >;
	};
	cpus {
		#address-cells = < 0x1 >;
		#size-cells = < 0x0 >;
		cpu0: cpu@0 {
			compatible = "zephyr,native-posix-cpu";
			reg = < 0x0 >;
		};
	};
	flashcontroller0: flash-controller@0 {
		compatible = "zephyr,sim-flash";
		reg = < 0x0 0x200000 >;
		#address-cells = < 0x1 >;
		#size-cells = < 0x1 >;
		erase-value = < 0xff >;
		flash0: flash@0 {
			status = "okay";
			compatible = "soc-nv-flash";
			erase-block-size = < 0x1000 >;
			write-block-size = < 0x1 >;
			reg = < 0x0 0x200000 >;
			partitions {
				compatible = "fixed-partitions";
				#address-cells = < 0x1 >;
				#size-cells = < 0x1 >;
				boot_partition: partition@0 {
					label = "mcuboot";
					reg = < 0x0 0xc000 >;
				};
				slot0_partition: partition@c000 {
					label = "image-0";
					reg = < 0xc000 0x69000 >;
				};
				slot1_partition: partition@75000 {
					label = "image-1";
					reg = < 0x75000 0x69000 >;
				};
				scratch_partition: partition@de000 {
					label = "image-scratch";
					reg = < 0xde000 0x1e000 >;
				};
				storage_partition: partition@fc000 {
					label = "storage";
					reg = < 0xfc000 0x4000 >;
				};
			};
		};
	};
	eeprom0: eeprom {
		status = "okay";
		compatible = "zephyr,sim-eeprom";
		size = < 0x8000 >;
	};
	i2c0: i2c@100 {
		status = "okay";
		compatible = "zephyr,i2c-emul-controller";
		clock-frequency = < 0x186a0 >;
		#address-cells = < 0x1 >;
		#size-cells = < 0x0 >;
		reg = < 0x100 0x4 >;
	};
	spi0: spi@200 {
		status = "okay";
		compatible = "zephyr,spi-emul-controller";
		clock-frequency = < 0x2faf080 >;
		#address-cells = < 0x1 >;
		#size-cells = < 0x0 >;
		reg = < 0x200 0x4 >;
	};
	espi0: espi@300 {
		status = "okay";
		compatible = "zephyr,espi-emul-controller";
		reg = < 0x300 0x4 >;
		#address-cells = < 0x1 >;
		#size-cells = < 0x0 >;
	};
	uart0: uart {
		status = "okay";
		compatible = "zephyr,native-posix-uart";
		current-speed = < 0x0 >;
	};
	uart1: uart_1 {
		status = "okay";
		compatible = "zephyr,native-posix-uart";
		current-speed = < 0x0 >;
	};
	rng: rng {
		status = "okay";
		compatible = "zephyr,native-posix-rng";
	};
	counter0: counter {
		status = "okay";
		compatible = "zephyr,native-posix-counter";
	};
	gpio0: gpio@800 {
		status = "okay";
		compatible = "zephyr,gpio-emul";
		reg = < 0x800 0x4 >;
		rising-edge;
		falling-edge;
		high-level;
		low-level;
		gpio-controller;
		#gpio-cells = < 0x2 >;
		ngpios = < 0x9 >;
		phandle = < 0x1 >;
		sdl_gpio {
			status = "okay";
			compatible = "zephyr,gpio-emul-sdl";
			scancodes = < 0x0 0x15 0x5 0x1e 0x1f 0x20 0x50 0x4f 0x28 >;
		};
	};
	zephyr_udc0: udc0 {
		compatible = "zephyr,native-posix-udc";
	};
	sdl_dc: sdl_dc {
		compatible = "zephyr,sdl-dc";
		height = < 0x28a >;
		width = < 0x258 >;
	};
	input_sdl_touch: input-sdl-touch {
		compatible = "zephyr,input-sdl-touch";
		phandle = < 0x2 >;
	};
	can_loopback0: can_loopback0 {
		status = "okay";
		compatible = "zephyr,can-loopback";
		sample-point = < 0x36b >;
		bus-speed = < 0x1e848 >;
	};
	can0: can {
		status = "disabled";
		compatible = "zephyr,native-linux-can";
		host-interface = "zcan0";
		sample-point = < 0x36b >;
		bus-speed = < 0x1e848 >;
	};
	rtc: rtc {
		status = "okay";
		compatible = "zephyr,rtc-emul";
		alarms-count = < 0x2 >;
	};
	adc0: adc {
		compatible = "zephyr,adc-emul";
		nchannels = < 0x2 >;
		#io-channel-cells = < 0x1 >;
		status = "okay";
	};
	dma: dma {
		compatible = "zephyr,dma-emul";
		#dma-cells = < 0x1 >;
		stack-size = < 0x1000 >;
	};
	qdec {
		compatible = "gpio-qdec";
		gpios = < &gpio0 0x4 0x0 >, < &gpio0 0x5 0x0 >;
		steps-per-period = < 0x4 >;
		zephyr,axis = < 0x8 >;
		sample-time-us = < 0x7d0 >;
		idle-timeout-ms = < 0xc8 >;
	};
	keys: keys {
		compatible = "gpio-keys";
		phandle = < 0x3 >;
		button0: button0 {
			gpios = < &gpio0 0x1 0x0 >;
			zephyr,code = < 0x13 >;
		};
		button1: button1 {
			gpios = < &gpio0 0x2 0x0 >;
			zephyr,code = < 0x30 >;
		};
		encoder_button: encoder_button {
			gpios = < &gpio0 0x3 0x0 >;
			zephyr,code = < 0xb >;
		};
		button_left: button_left {
			gpios = < &gpio0 0x6 0x0 >;
			zephyr,code = < 0x69 >;
		};
		button_right: button_right {
			gpios = < &gpio0 0x7 0x0 >;
			zephyr,code = < 0x6a >;
		};
		button_enter: button_enter {
			gpios = < &gpio0 0x8 0x0 >;
			zephyr,code = < 0x1c >;
		};
	};
	lvgl_button_input {
		compatible = "zephyr,lvgl-button-input";
		input = < &keys >;
		input-codes = < 0x30 >;
		coordinates = < 0xa0 0x78 >;
	};
	lvgl_encoder_input {
		compatible = "zephyr,lvgl-encoder-input";
		rotation-input-code = < 0x8 >;
		button-input-code = < 0xb >;
	};
	lvgl_keypad_input {
		compatible = "zephyr,lvgl-keypad-input";
		input = < &keys >;
		input-codes = < 0x69 0x6a 0x1c >;
		lvgl-codes = < 0x14 0x13 0xa >;
	};
};
